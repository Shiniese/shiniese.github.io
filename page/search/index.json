[{"content":"\r笔记 情景 1：向远程仓库 push 更新（本地从未拉取过仓库） 克隆远程仓库到本地: git clone \u0026lt;repository_url\u0026gt; 创建并切换到新的功能分支: git checkout -b my_feature 修改代码后,查看更改: git diff 添加修改的文件到暂存区: git add \u0026lt;file_name\u0026gt; 提交更改: git commit -m \u0026#34;注释\u0026#34; 将功能分支推送到远程仓库: git push origin my_feature 情景 2：向远程仓库 push 更新（已拉取过仓库，但写代码时发现远端 GitHub 上代码出现改变） 当主分支(main)有更新时,同步这些更新到功能分支: git checkout main git pull origin main git checkout my_feature git rebase main git rebase main 意思是先把 main 移过来，然后根据我的 commit 来修改成新的内容。中途可能会出现 rebase conflict，这时需要手动选择保留哪段代码。\n强制推送更新后的功能分支到远程仓库: git push -f origin my_feature 需要注意的是,在使用 git push -f (强制推送)时要格外小心,因为它会覆盖远程分支的历史。只有在确定没有其他人在同一分支上工作或者大家都是用这样同一套工作流时才应使用此命令。\n在GitHub上创建Pull Request 情景 3：远程仓库完成更新后 合并 Pull Request 后，清理分支:\ngit checkout main git pull origin main git branch -d my_feature ","date":"2024-07-06T10:57:13+08:00","image":"https://files.catbox.moe/n39b5x.png","permalink":"https://shiniese.github.io/post/study-github-workflow/","title":"学习 Github 工作流"},{"content":"写什么？ 主要写一些日常和一些技术文章，用来记录或存档。\n为什么？ 其实我蛮懒的，很早就弄过博客，只是没过多久就没动力更新了，所以最后都废了。要么没时间要么就是想干些别的。\n那为啥又突然心血来潮了？\n主要是前些天看到说 AI 时代，网上很多信息都将被污染，我希望个人博客是优质信息的最后一片净⼟，所以重新操办起来了。\n能否坚持？ 再说吧\u0026hellip;\n","date":"2024-07-05T18:31:39+08:00","permalink":"https://shiniese.github.io/post/my-first-post/","title":"My First Post"}]